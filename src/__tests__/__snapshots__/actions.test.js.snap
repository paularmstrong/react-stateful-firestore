// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Actions addListener starts the listener, then adds it 1`] = `
Array [
  Object {
    "meta": Object {
      "query": Object {
        "get": [Function],
        "id": "foo",
        "onSnapshot": [Function],
        "path": "foo",
      },
      "queryId": "foo",
    },
    "payload": Array [
      Object {
        "meta": Object {
          "query": Object {
            "get": [Function],
            "id": "foo",
            "onSnapshot": [Function],
            "path": "foo",
          },
        },
        "payload": Object {},
        "type": "firestore/collections/MODIFY_ONE",
      },
      Object {
        "meta": Object {
          "queryId": "foo",
        },
        "payload": Object {},
        "type": "firestore/queries/SUCCESS",
      },
    ],
    "type": "BATCH",
  },
  Object {
    "meta": Object {
      "queryId": "foo",
    },
    "payload": undefined,
    "type": "firestore/listeners/ADD",
  },
]
`;

exports[`Actions addQuery adds the query and executes it 1`] = `
Array [
  Object {
    "meta": Object {
      "queryId": "foo",
    },
    "payload": Object {
      "get": [Function],
      "id": "foo",
      "onSnapshot": [Function],
      "path": "foo",
    },
    "type": "firestore/queries/REQUEST",
  },
  Object {
    "meta": Object {
      "query": Object {
        "get": [Function],
        "id": "foo",
        "onSnapshot": [Function],
        "path": "foo",
      },
      "queryId": "foo",
    },
    "payload": Array [
      Object {
        "meta": Object {
          "query": Object {
            "get": [Function],
            "id": "foo",
            "onSnapshot": [Function],
            "path": "foo",
          },
        },
        "payload": Object {},
        "type": "firestore/collections/MODIFY_ONE",
      },
      Object {
        "meta": Object {
          "queryId": "foo",
        },
        "payload": Object {},
        "type": "firestore/queries/SUCCESS",
      },
    ],
    "type": "BATCH",
  },
]
`;

exports[`Actions getStorageDownloadUrl does nothing if already in state 1`] = `Array []`;

exports[`Actions getStorageDownloadUrl requests download URL 1`] = `
Array [
  Object {
    "meta": Object {
      "reference": Object {
        "fullPath": "/thing",
        "getDownloadURL": [MockFunction] {
          "calls": Array [
            Array [],
          ],
        },
      },
    },
    "type": "firestore/storage/downloadUrl/REQUEST",
  },
  Object {
    "meta": Object {
      "reference": Object {
        "fullPath": "/thing",
        "getDownloadURL": [MockFunction] {
          "calls": Array [
            Array [],
          ],
        },
      },
    },
    "payload": undefined,
    "type": "firestore/storage/downloadUrl/SUCCESS",
  },
]
`;

exports[`Actions getStorageMetadata does nothing if already in state 1`] = `Array []`;

exports[`Actions getStorageMetadata requests metadata 1`] = `
Array [
  Object {
    "meta": Object {
      "reference": Object {
        "fullPath": "/thing",
        "getMetadata": [MockFunction] {
          "calls": Array [
            Array [],
          ],
        },
      },
    },
    "type": "firestore/storage/metadata/REQUEST",
  },
  Object {
    "meta": Object {
      "reference": Object {
        "fullPath": "/thing",
        "getMetadata": [MockFunction] {
          "calls": Array [
            Array [],
          ],
        },
      },
    },
    "payload": undefined,
    "type": "firestore/storage/metadata/SUCCESS",
  },
]
`;

exports[`Actions setUser adds queries and listeners 1`] = `
Array [
  Object {
    "meta": Object {
      "queryId": "auth|users/123",
    },
    "payload": Object {
      "get": [Function],
      "id": "users/123",
      "onSnapshot": [Function],
      "path": "users/123",
    },
    "type": "firestore/queries/REQUEST",
  },
  Object {
    "meta": Object {
      "query": Object {
        "get": [Function],
        "id": "users/123",
        "onSnapshot": [Function],
        "path": "users/123",
      },
      "queryId": "auth|users/123",
    },
    "payload": Array [
      Object {
        "meta": Object {
          "query": Object {
            "get": [Function],
            "id": "users/123",
            "onSnapshot": [Function],
            "path": "users/123",
          },
        },
        "payload": Object {},
        "type": "firestore/collections/MODIFY_ONE",
      },
      Object {
        "meta": Object {
          "queryId": "auth|users/123",
        },
        "payload": Object {},
        "type": "firestore/queries/SUCCESS",
      },
    ],
    "type": "BATCH",
  },
  Object {
    "meta": Object {
      "queryId": "auth|users/123",
    },
    "payload": undefined,
    "type": "firestore/listeners/ADD",
  },
  Object {
    "meta": Object {},
    "payload": Array [
      Object {
        "payload": Object {
          "uid": "123",
        },
        "type": "firestore/auth/CHANGE",
      },
    ],
    "type": "BATCH",
  },
  Object {
    "meta": Object {
      "query": Object {
        "get": [Function],
        "id": "users/123",
        "onSnapshot": [Function],
        "path": "users/123",
      },
      "queryId": "auth|users/123",
    },
    "payload": Array [
      Object {
        "meta": Object {
          "query": Object {
            "get": [Function],
            "id": "users/123",
            "onSnapshot": [Function],
            "path": "users/123",
          },
        },
        "payload": Object {},
        "type": "firestore/collections/MODIFY_ONE",
      },
      Object {
        "meta": Object {
          "queryId": "auth|users/123",
        },
        "payload": Object {},
        "type": "firestore/queries/SUCCESS",
      },
    ],
    "type": "BATCH",
  },
]
`;

exports[`Actions setUser triggers only auth change action if no collection 1`] = `
Array [
  Object {
    "meta": Object {},
    "payload": Array [
      Object {
        "payload": Object {
          "uid": "123",
        },
        "type": "firestore/auth/CHANGE",
      },
    ],
    "type": "BATCH",
  },
]
`;

exports[`Actions unsetUser removes queries, listeners, and the user from the collection 1`] = `
Array [
  Object {
    "meta": Object {
      "queryId": "auth|users/123",
    },
    "type": "firestore/listeners/REMOVE",
  },
  Object {
    "meta": Object {
      "query": Object {
        "get": [Function],
        "id": "users/123",
        "onSnapshot": [Function],
        "path": "users/123",
      },
      "queryId": "auth|users/123",
    },
    "payload": Array [
      Object {
        "meta": Object {
          "queryId": "auth|users/123",
        },
        "payload": Object {
          "get": [Function],
          "id": "users/123",
          "onSnapshot": [Function],
          "path": "users/123",
        },
        "type": "firestore/queries/REMOVE",
      },
      Object {
        "meta": Object {
          "query": Object {
            "get": [Function],
            "id": "users/123",
            "onSnapshot": [Function],
            "path": "users/123",
          },
        },
        "payload": Object {
          "id": "123",
        },
        "type": "firestore/collections/REMOVE",
      },
      Object {
        "type": "firestore/auth/CHANGE",
      },
    ],
    "type": "BATCH",
  },
]
`;

exports[`Actions unsetUser triggers only auth change action if no collection 1`] = `
Array [
  Object {
    "meta": Object {},
    "payload": Array [
      Object {
        "type": "firestore/auth/CHANGE",
      },
    ],
    "type": "BATCH",
  },
]
`;
